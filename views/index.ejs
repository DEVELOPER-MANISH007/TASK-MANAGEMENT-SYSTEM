<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/styles.css">
  <title>AuthestApp - User Registration</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
  </style>
</head>
<body class="theme-transition animate-fade-in min-h-screen flex items-center justify-center" style="background: linear-gradient(135deg, var(--background-color) 0%, var(--surface-color) 100%); color: var(--text-color);">
  
  <!-- Theme Toggle -->
  <div class="absolute top-6 right-6 z-10">
    <button id="toggleTheme" class="btn-secondary px-4 py-2 theme-transition flex items-center gap-2">
      <span id="themeIcon">🌙</span>
      <span id="themeText">Dark</span>
    </button>
  </div>

  <!-- Main Container -->
  <div class="container mx-auto px-4">
    <div class="card p-8 w-full max-w-md mx-auto animate-slide-up">
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-4xl font-bold gradient-text mb-2">Welcome</h1>
        <p class="text-lg" style="color: var(--text-secondary);">Create your account to get started</p>
      </div>

      <!-- Form -->
      <form id="userForm" method="post" action="/create" class="space-y-6">
        <div class="space-y-4">
          <input class="input-field w-full px-4 py-3" type="text" placeholder="Username" name="username" required>
          <input class="input-field w-full px-4 py-3" type="email" placeholder="Email Address" name="email" required>
          <input class="input-field w-full px-4 py-3" type="password" placeholder="Password" name="password" required>
          <input class="input-field w-full px-4 py-3" type="number" placeholder="Age" name="age" required>
        </div>

        <button type="submit" class="btn-primary w-full py-3 px-6 flex items-center justify-center gap-2">
          <span>Create Account</span>
          <div class="loader" id="loader"></div>
        </button>
      </form>

      <!-- Footer Links -->
      <div class="mt-6 text-center">
        <p style="color: var(--text-secondary);">
          Already have an account? 
          <a href="/login" class="text-blue-400 hover:text-blue-300 transition-colors">Sign in</a>
        </p>
      </div>
    </div>
  </div>

  <script>
    // Theme Management
    const toggleButton = document.getElementById('toggleTheme');
    const themeIcon = document.getElementById('themeIcon');
    const themeText = document.getElementById('themeText');
    const htmlTag = document.querySelector('html');

    function updateThemeUI(theme) {
      if (theme === 'dark') {
        themeIcon.textContent = '🌙';
        themeText.textContent = 'Dark';
      } else {
        themeIcon.textContent = '☀️';
        themeText.textContent = 'Light';
      }
    }

    toggleButton.addEventListener('click', () => {
      const currentTheme = htmlTag.getAttribute('data-theme');
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      htmlTag.setAttribute('data-theme', newTheme);
      updateThemeUI(newTheme);
      
      // Save theme preference
      localStorage.setItem('theme', newTheme);
    });

    // Load saved theme preference
    const savedTheme = localStorage.getItem('theme') || 'dark';
    htmlTag.setAttribute('data-theme', savedTheme);
    updateThemeUI(savedTheme);

    // Form submission with loading state
    const form = document.getElementById('userForm');
    const loader = document.getElementById('loader');
    const submitButton = form.querySelector('button[type="submit"]');

    form.addEventListener('submit', (e) => {
      // Show loading state
      loader.style.display = 'block';
      submitButton.disabled = true;
      submitButton.querySelector('span').textContent = 'Creating...';
      
      // Add a small delay to show the loading animation
      setTimeout(() => {
        // Form will submit normally after this
      }, 100);
    });

    // Add input validation feedback
    const inputs = form.querySelectorAll('input');
    inputs.forEach(input => {
      input.addEventListener('blur', () => {
        if (input.checkValidity()) {
          input.style.borderColor = 'var(--success-color)';
        } else {
          input.style.borderColor = 'var(--error-color)';
        }
      });
      
      input.addEventListener('input', () => {
        input.style.borderColor = 'var(--input-border)';
      });
    });
  </script>
</body>
</html>
